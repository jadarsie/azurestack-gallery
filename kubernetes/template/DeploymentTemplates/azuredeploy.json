{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
