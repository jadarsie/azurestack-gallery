{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "kubernetesAzureCloudProviderRelease": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the release for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_RELEASE=','\"',parameters('kubernetesAzureCloudProviderRelease'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
