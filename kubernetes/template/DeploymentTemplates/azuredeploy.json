{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
