{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
