{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
